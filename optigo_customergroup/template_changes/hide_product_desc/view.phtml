<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>




<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>

<?php
	//Custom code start to hide product according to customer group
	$resource = Mage::getSingleton('core/resource'); 
	$readConnection = $resource->getConnection('core_read'); 
	$finalProductArr = array();
	$customerGroupId = 0;
	
	$groupNameProduct = 'NOT LOGGED IN(P)';
	if(Mage::getSingleton('customer/session')->isLoggedIn()){
		$customerGroupId = Mage::getSingleton('customer/session')->getCustomerGroupId();
		$groupNameProduct = Mage::getModel('customer/group')->load($customerGroupId)->getCustomerGroupCode()."(P)";
	}
	$groupIDQuery = "SELECT option_id FROM eav_attribute_option_value where value='$groupNameProduct';";
	$groupIdResults = $readConnection->fetchOne($groupIDQuery);
	$restrictedProductArr = array();
	if (trim($groupIdResults) != "") {
		$productIDQuery = "SELECT entity_id FROM catalog_product_entity_varchar WHERE value REGEXP CONCAT('(^|,)(".$groupIdResults.")(,|$)');";
		$productIDResults = $readConnection->fetchAll($productIDQuery);
		if (!empty($productIDResults)) {
			foreach ($productIDResults as $prKey => $prVal) {
				array_push($finalProductArr,$prVal['entity_id']);
			}
		}
	}
	//Custom code end to hide product according to customer group
	
	//Custom code start to hide category according to customer group
	$groupNameCategory = 'NOT LOGGED IN(C)';
	if(Mage::getSingleton('customer/session')->isLoggedIn()){
		$customerGroupId = Mage::getSingleton('customer/session')->getCustomerGroupId();
		$groupNameCategory = Mage::getModel('customer/group')->load($customerGroupId)->getCustomerGroupCode()."(C)";
	}
	$groupIDQuery = "SELECT option_id FROM eav_attribute_option_value where value='$groupNameCategory';";
	$groupIdResults = $readConnection->fetchOne($groupIDQuery);
	if (trim($groupIdResults) != "") {
		$categoryIDQuery = "SELECT entity_id FROM catalog_category_entity_varchar WHERE value REGEXP CONCAT('(^|,)(".$groupIdResults.")(,|$)');";
		$categoryIDResults = $readConnection->fetchAll($categoryIDQuery);
		if (!empty($categoryIDResults)) {
			foreach ($categoryIDResults as $catKey => $catVal) {
				$restrictedCategory = $catVal['entity_id'];
				$category = new Mage_Catalog_Model_Category();
				$category->load($restrictedCategory);
				$collection = $category->getProductCollection();
				foreach ($collection as $product) {
					$producuID = $product->getId();
					array_push($finalProductArr,$producuID);
				}
			}
		}
	}
	//Custom code end to hide category according to customer group
	$restrictedProductArr = array_unique($finalProductArr);
	$productId = $_product->getId();
	if (in_array($productId,$restrictedProductArr)) {
		
	?>
		<p class="note-msg"><?php echo $this->__('You have no permission to see this product detail.') ?></p>
	<?php	
	} else {
?>

<?php
//Custom code start to hide description
$descShow = "yes";
$productId = $_product->getId();
$resource = Mage::getSingleton('core/resource'); 
$readConnection = $resource->getConnection('core_read'); 
$descIDQuery = "SELECT value FROM catalog_product_entity_int WHERE entity_id =".$productId.";";
$descIDResults = $readConnection->fetchAll($descIDQuery);
if (!empty($descIDResults)) {
	foreach ($descIDResults as $descKey => $descVal) {
		$optionId = $descVal['value'];
		if (trim($optionId) != "") {
			$optionIDValQuery = "SELECT value FROM eav_attribute_option_value WHERE option_id =".$optionId.";";
			$optionIDValResults = $readConnection->fetchAll($optionIDValQuery);
			if (!empty($optionIDValResults)) {
				if (trim($optionIDValResults[0]['value']) == 'Hide(P)') {
					$descShow = "no";
				}
			}
		}
	}
}
//Custom code start to hide description
?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->toHtml() ?></div>
<div class="product-view">
    <div class="product-essential">
        <form action="<?php echo $this->getSubmitUrl($_product, array('_secure' => $this->_isSecure())) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
            <?php echo $this->getBlockHtml('formkey') ?>
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                <input type="hidden" name="related_product" id="related-products-field" value="" />
            </div>

            <div class="product-img-box">
                <div class="product-name">
                    <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                </div>
                <?php echo $this->getChildHtml('media') ?>
            </div>

            <div class="product-shop">
                <div class="product-name">
                    <span class="h1"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></span>
                </div>

                <div class="price-info">
                    <?php echo $this->getPriceHtml($_product); ?>
                    <?php echo $this->getChildHtml('bundle_prices') ?>
                    <?php echo $this->getTierPriceHtml() ?>
                </div>

                <div class="extra-info">
                    <?php echo $this->getReviewsSummaryHtml($_product, 'default', false)?>
                    <?php echo $this->getChildHtml('product_type_availability'); ?>
                </div>

                <?php echo $this->getChildHtml('alert_urls') ?>

                <?php if ($_product->getShortDescription()):?>
					<?php if ($descShow == 'yes') { ?>
                    <div class="short-description">
                        <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                    </div>
					<?php }?>
                <?php endif;?>




                <?php echo $this->getChildHtml('other');?>

                <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                <?php endif;?>

            </div>

            <div class="add-to-cart-wrapper">
                <?php echo $this->getChildHtml('product_type_data') ?>
                <?php echo $this->getChildHtml('extrahint') ?>

                <?php if (!$this->hasOptions()):?>
                    <div class="add-to-box">
                        <?php if($_product->isSaleable()): ?>
                            <?php echo $this->getChildHtml('addtocart') ?>
                            <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                                <span class="or"><?php echo $this->__('OR') ?></span>
                            <?php endif; ?>
                        <?php endif; ?>
                        <?php echo $this->getChildHtml('addto') ?>
                        <?php echo $this->getChildHtml('sharing') ?>
                    </div>
                    <?php echo $this->getChildHtml('extra_buttons') ?>
                <?php elseif (!$_product->isSaleable()): ?>
                    <div class="add-to-box">
                        <?php echo $this->getChildHtml('addto') ?>
                        <?php echo $this->getChildHtml('sharing') ?>
                    </div>
                <?php endif; ?>
            </div>

            <?php echo $this->getChildHtml('related_products') ?>

            <div class="clearer"></div>
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            <?php endif;?>
        </form>
        <script type="text/javascript">
        //<![CDATA[
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function(button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;

                    if (url) {
                       form.action = url;
                    }
                    var e = null;
                    try {
                        this.form.submit();
                    } catch (e) {
                    }
                    this.form.action = oldUrl;
                    if (e) {
                        throw e;
                    }

                    if (button && button != 'undefined') {
                        button.disabled = true;
                    }
                }
            }.bind(productAddToCartForm);

            productAddToCartForm.submitLight = function(button, url){
                if(this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productAddToCartForm);
        //]]>
        </script>
    </div>

    <div class="product-collateral toggle-content tabs">
        <?php if ($detailedInfoGroup = $this->getChildGroup('detailed_info', 'getChildHtml')):?>
            <dl id="collateral-tabs" class="collateral-tabs">
                <?php foreach ($detailedInfoGroup as $alias => $html):?>
					
					<?php
						//Custom code start to hide description
						if (trim($alias) == 'description') {
							if ($descShow == 'no') {
								continue;
							}
						}
						//Custom code end to hide description
					?>
					
                    <dt class="tab"><span><?php echo $this->escapeHtml($this->getChildData($alias, 'title')) ?></span></dt>
                    <dd class="tab-container">
                        <div class="tab-content"><?php echo $html ?></div>
                    </dd>
                <?php endforeach;?>
            </dl>
        <?php endif; ?>
    </div>

    <?php echo $this->getChildHtml('upsell_products') ?>
    <?php echo $this->getChildHtml('product_additional_data') ?>

</div>
<?php } ?>
