<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
/* @var $this Mage_Reports_Block_Product_Viewed */
?>

<?php
	//Custom code start to hide product according to customer group
	$resource = Mage::getSingleton('core/resource'); 
	$readConnection = $resource->getConnection('core_read'); 
	$finalProductArr = array();
	$customerGroupId = 0;
	
	$groupNameProduct = 'NOT LOGGED IN(P)';
	if(Mage::getSingleton('customer/session')->isLoggedIn()){
		$customerGroupId = Mage::getSingleton('customer/session')->getCustomerGroupId();
		$groupNameProduct = Mage::getModel('customer/group')->load($customerGroupId)->getCustomerGroupCode()."(P)";
	}
	$groupIDQuery = "SELECT option_id FROM eav_attribute_option_value where value='$groupNameProduct';";
	$groupIdResults = $readConnection->fetchOne($groupIDQuery);
	$restrictedProductArr = array();
	if (trim($groupIdResults) != "") {
		$productIDQuery = "SELECT entity_id FROM catalog_product_entity_varchar WHERE value REGEXP CONCAT('(^|,)(".$groupIdResults.")(,|$)');";
		$productIDResults = $readConnection->fetchAll($productIDQuery);
		if (!empty($productIDResults)) {
			foreach ($productIDResults as $prKey => $prVal) {
				array_push($finalProductArr,$prVal['entity_id']);
			}
		}
	}
	//Custom code end to hide product according to customer group
	
	
	//Custom code start to hide category according to customer group
	$groupNameCategory = 'NOT LOGGED IN(C)';
	if(Mage::getSingleton('customer/session')->isLoggedIn()){
		$customerGroupId = Mage::getSingleton('customer/session')->getCustomerGroupId();
		$groupNameCategory = Mage::getModel('customer/group')->load($customerGroupId)->getCustomerGroupCode()."(C)";
	}
	$groupIDQuery = "SELECT option_id FROM eav_attribute_option_value where value='$groupNameCategory';";
	$groupIdResults = $readConnection->fetchOne($groupIDQuery);
	if (trim($groupIdResults) != "") {
		$categoryIDQuery = "SELECT entity_id FROM catalog_category_entity_varchar WHERE value REGEXP CONCAT('(^|,)(".$groupIdResults.")(,|$)');";
		$categoryIDResults = $readConnection->fetchAll($categoryIDQuery);
		if (!empty($categoryIDResults)) {
			foreach ($categoryIDResults as $catKey => $catVal) {
				$restrictedCategory = $catVal['entity_id'];
				$category = new Mage_Catalog_Model_Category();
				$category->load($restrictedCategory);
				$collection = $category->getProductCollection();
				foreach ($collection as $product) {
					$producuID = $product->getId();
					array_push($finalProductArr,$producuID);
				}
			}
		}
	}
	//Custom code end to hide category according to customer group
	$restrictedProductArr = array_unique($finalProductArr);
?>

<?php if ($_products = $this->getRecentlyViewedProducts()): ?>

<?php
	$searchProductResult = array();
	foreach ($_products as $_product) {
		$productId = $_product->getId();
		array_push($searchProductResult,$productId);
	}
	$arrDiff = array_diff($searchProductResult,$restrictedProductArr);
	$prSize = count($arrDiff);
?>
<?php if ($prSize > 0) { ?>
	<div class="block block-list block-viewed">
		<div class="block-title">
			<strong><span><?php echo $this->__('Recently Viewed Products') ?></span></strong>
		</div>
		<div class="block-content">
			<ol id="recently-viewed-items" class="mini-products-list">
			<?php foreach ($_products as $_item): ?>
				<?php 
					$listedProductId = $_item->getId();
					if (in_array($listedProductId,$restrictedProductArr)) {
						continue;
					}
				?>
				<li class="item">
					<a href="<?php echo $this->getProductUrl($_item) ?>">
						<span class="product-image"><img src="<?php echo $this->helper('catalog/image')->init($_item, 'thumbnail')->resize(50, 50)->setWatermarkSize('30x10'); ?>" width="50" height="50" alt="<?php echo $this->escapeHtml($this->getProductName()) ?>" /></span>
					</a>
					<div class="product-details">
						<p class="product-name">
							<a href="<?php echo $this->getProductUrl($_item) ?>">
								<?php echo $this->helper('catalog/output')->productAttribute($_item, $_item->getName() , 'name') ?>
							</a>
						</p>
					</div>
				</li>
			<?php endforeach; ?>
			</ol>
			<script type="text/javascript">decorateList('recently-viewed-items');</script>
		</div>
	</div>
<?php } ?>
<?php endif; ?>
